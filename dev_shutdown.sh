#!/bin/bash

# doil-sb Development Server Shutdown Script

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PID_FILE="$SCRIPT_DIR/.dev-server.pid"

# PID ÌååÏùºÏù¥ ÏûàÎäîÏßÄ ÌôïÏù∏
if [ ! -f "$PID_FILE" ]; then
    echo "‚ùå No development server running (PID file not found)"
    echo "   Use './startup.sh' to start the server."
    exit 1
fi

# PID ÏùΩÍ∏∞
PID=$(cat "$PID_FILE")

# ÌîÑÎ°úÏÑ∏Ïä§Í∞Ä Ïã§Ï†úÎ°ú Ïã§Ìñâ Ï§ëÏù∏ÏßÄ ÌôïÏù∏
if ! ps -p $PID > /dev/null 2>&1; then
    echo "‚ùå Development server is not running (PID: $PID)"
    echo "üßπ Cleaning up stale PID file..."
    rm -f "$PID_FILE"
    exit 1
fi

echo "üõë Stopping doil-sb development server (PID: $PID)..."

# nodemonÏùò Í≤ΩÏö∞ ÏûêÏãù ÌîÑÎ°úÏÑ∏Ïä§ÎèÑ Ìï®Íªò Ï¢ÖÎ£å
if ps -p $PID -o cmd= | grep -q "nodemon"; then
    echo "   Detected nodemon, stopping child processes..."
    # nodemonÍ≥º Í∑∏ ÏûêÏãù ÌîÑÎ°úÏÑ∏Ïä§Îì§ Î™®Îëê Ï¢ÖÎ£å
    pkill -P $PID 2>/dev/null || true
fi

# Graceful shutdown ÏãúÎèÑ (SIGTERM)
kill -TERM $PID 2>/dev/null

# ÌîÑÎ°úÏÑ∏Ïä§Í∞Ä Ï¢ÖÎ£åÎê† ÎïåÍπåÏßÄ ÏµúÎåÄ 10Ï¥à ÎåÄÍ∏∞
WAIT_TIME=0
MAX_WAIT=10

while [ $WAIT_TIME -lt $MAX_WAIT ]; do
    if ! ps -p $PID > /dev/null 2>&1; then
        echo "‚úÖ Development server stopped gracefully"
        rm -f "$PID_FILE"
        exit 0
    fi
    
    sleep 1
    WAIT_TIME=$((WAIT_TIME + 1))
    echo "   Waiting for graceful shutdown... ($WAIT_TIME/$MAX_WAIT)"
done

# Graceful shutdownÏù¥ Ïã§Ìå®Ìïú Í≤ΩÏö∞ Í∞ïÏ†ú Ï¢ÖÎ£å (SIGKILL)
echo "‚ö†Ô∏è  Graceful shutdown failed, forcing termination..."
kill -KILL $PID 2>/dev/null

# Îã§Ïãú Ìïú Î≤à ÌôïÏù∏
sleep 1
if ! ps -p $PID > /dev/null 2>&1; then
    echo "‚úÖ Development server stopped (forced)"
    rm -f "$PID_FILE"
else
    echo "‚ùå Failed to stop development server"
    echo "   You may need to manually kill process $PID"
    exit 1
fi